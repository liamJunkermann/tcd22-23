version: "2"
services:
  #ingress
  ingress:
    container_name: ingress
    image: openjdk:19-jdk-alpine
    working_dir: /file_retrieval
    volumes:
      - ./src:/file_retrieval
    networks:
      file_retrieval:
        ipv4_address: 192.168.10.10
    command: java -cp . Ingress
    depends_on:
      - "tcpdump"

  #clients
  client1:
    container_name: client1
    image: openjdk:19-jdk-alpine
    working_dir: /file_retrieval
    volumes:
      - ./src:/file_retrieval
    networks:
      file_retrieval:
        ipv4_address: 192.168.10.20
    command: tail -f /dev/null

  client2:
    container_name: client2
    image: openjdk:19-jdk-alpine
    working_dir: /file_retrieval
    depends_on:
      - "ingress"
    volumes:
      - ./src:/file_retrieval
    networks:
      file_retrieval:
        ipv4_address: 192.168.10.30
    command: tail -f /dev/null

  #workers
  worker1:
    container_name: worker1
    image: openjdk:19-jdk-alpine
    working_dir: /file_retrieval
    volumes:
      - ./src:/file_retrieval
      - ./files:/files
    networks:
      file_retrieval:
        ipv4_address: 192.168.10.40
    command: java -cp . Worker worker1

  worker2:
    container_name: worker2
    image: openjdk:19-jdk-alpine
    working_dir: /file_retrieval
    depends_on:
      - "ingress"
    volumes:
      - ./src:/file_retrieval
      - ./files:/files
    networks:
      file_retrieval:
        ipv4_address: 192.168.10.50
    command: java -cp . Worker worker2

  tcpdump:
    container_name: tcpdump
    image: kaazing/tcpdump
    network_mode: "host"
    volumes:
      - ./tcpdump:/tcpdump

# Network
networks:
  file_retrieval:
    ipam:
      driver: default
      config:
        - subnet: 192.168.10.0/24
          gateway: 192.168.10.1
